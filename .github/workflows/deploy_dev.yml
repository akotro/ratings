name: Deploy Dev

on:
  workflow_run:
    workflows: ["Test"]
    types:
      - completed
    branches: [ "dev" ]

env:
  HOSTNAME: hoshiko

jobs:
  deploy:
    name: Deploy Dev
    runs-on: ubuntu-latest
    environment: development

    steps:

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        # root-reserve-mb: 512
        # swap-size-mb: 1024
        overprovision-lvm: 'true'
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: |
          ${{ secrets.SSH_RATINGS_DEPLOY_KEY }}
          ${{ secrets.SSH_DOTFILES_DEPLOY_KEY }}
          ${{ secrets.SSH_NVIM_DEPLOY_KEY }}
          ${{ secrets.SSH_SITE_DEPLOY_KEY }}

    - name: Tailscale
      uses: tailscale/github-action@v2
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        tags: tag:ci
        version: 1.70.0

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main
      with:
        extra-conf: |
          substituters = https://cache.nixos.org/
          extra-substituters = https://nix-community.cachix.org https://aseipp-nix-cache.global.ssl.fastly.net https://nixcache.reflex-frp.org https://cache.iog.io https://digitallyinduced.cachix.org https://ghc-nix.cachix.org https://ic-hs-test.cachix.org https://kaleidogen.cachix.org https://static-haskell-nix.cachix.org https://tttool.cachix.org
          extra-trusted-public-keys = nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
    - uses: DeterminateSystems/magic-nix-cache-action@main

    - name: Checkout external repository
      uses: actions/checkout@v4
      with:
        repository: 'akotro/nixcfg'
        token: ${{ secrets.GIT_NIXCFG_PAT }}
        ref: 'main'

    - name: Update flake input
      run: |
        nix flake lock --accept-flake-config --update-input ratings

    - name: Add hostname to known hosts
      id: ssh-known-hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan $HOSTNAME >> ~/.ssh/known_hosts

    - name: Build and deploy
      run: |
        set -euxo pipefail
        nix run github:serokell/deploy-rs -- --skip-checks --remote-build .#$HOSTNAME.system -- --accept-flake-config

    - name: Commit and push changes
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Ratings Deploy Dev"
        git add .
        git commit -m "chore: update ratings flake input" -a || echo "No changes to commit"
        git push

